{"ast":null,"code":"var _jsxFileName = \"/Users/namerjhomefolder/blog-f-b/client/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  async function login(ev) {\n    ev.preventDefault();\n    const response = await fetch(\"http://localhost:4000/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    if (response.ok) {\n      setRedirect(true);\n    } else {\n      alert(\"wrong credentials\");\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login\",\n    onSubmit: login,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: ev => setUsername(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: ev => setPassword(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"GGvF2cOj/uUNkOhCtm13nqoJQgc=\");\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","Navigate","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","redirect","setRedirect","login","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","ok","alert","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","children","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/namerjhomefolder/blog-f-b/client/src/pages/LoginPage.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nexport default function LoginPage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  async function login(ev) {\n    ev.preventDefault();\n    const response = await fetch(\"http://localhost:4000/login\", {\n      method: \"POST\",\n      body: JSON.stringify({ username, password }),\n      headers: { \"Content-Type\": \"application/json\" },\n      credentials: \"include\",\n    });\n    if (response.ok) {\n      setRedirect(true);\n    } else {\n      alert(\"wrong credentials\");\n    }\n  }\n\n  if (redirect) {\n    return <Navigate to={\"/\"} />;\n  }\n\n  return (\n    <form className=\"login\" onSubmit={login}>\n      <h1>Login</h1>\n      <input\n        type=\"text\"\n        placeholder=\"username\"\n        value={username}\n        onChange={(ev) => setUsername(ev.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"password\"\n        value={password}\n        onChange={(ev) => setPassword(ev.target.value)}\n      />\n      <button>Login</button>\n    </form>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,eAAeY,KAAKA,CAACC,EAAE,EAAE;IACvBA,EAAE,CAACC,cAAc,CAAC,CAAC;IACnB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAC5Ca,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,WAAW,EAAE;IACf,CAAC,CAAC;IACF,IAAIP,QAAQ,CAACQ,EAAE,EAAE;MACfZ,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACLa,KAAK,CAAC,mBAAmB,CAAC;IAC5B;EACF;EAEA,IAAId,QAAQ,EAAE;IACZ,oBAAOP,OAAA,CAACF,QAAQ;MAACwB,EAAE,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9B;EAEA,oBACE1B,OAAA;IAAM2B,SAAS,EAAC,OAAO;IAACC,QAAQ,EAAEnB,KAAM;IAAAoB,QAAA,gBACtC7B,OAAA;MAAA6B,QAAA,EAAI;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd1B,OAAA;MACE8B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE7B,QAAS;MAChB8B,QAAQ,EAAGvB,EAAE,IAAKN,WAAW,CAACM,EAAE,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF1B,OAAA;MACE8B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE3B,QAAS;MAChB4B,QAAQ,EAAGvB,EAAE,IAAKJ,WAAW,CAACI,EAAE,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF1B,OAAA;MAAA6B,QAAA,EAAQ;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEX;AAACxB,EAAA,CAzCuBD,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}